# Generated by Django 5.2.3 on 2025-06-12 12:37

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('cargo_code', models.CharField(max_length=50, unique=True)),
                ('weight_kg', models.FloatField()),
                ('volume_m3', models.FloatField()),
                ('packages_count', models.IntegerField(default=1)),
                ('is_dangerous', models.BooleanField(default=False)),
                ('requires_cold_storage', models.BooleanField(default=False)),
                ('fragile', models.BooleanField(default=False)),
                ('category', models.CharField(choices=[('standard', 'Стандартный'), ('food', 'Пищевой'), ('electronic', 'Электроника'), ('chemical', 'Химия'), ('medical', 'Медицинский'), ('other', 'Другое')], default='standard', max_length=50)),
                ('origin', models.CharField(blank=True, max_length=100)),
                ('current_status', models.CharField(choices=[('created', 'Создан'), ('arrived', 'Поступил на склад'), ('stored', 'Размещён'), ('processing', 'Обрабатывается'), ('dispatched', 'Отгружен')], default='created', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('employee_code', models.CharField(max_length=20, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='CargoEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('arrived', 'Поступление'), ('stored', 'Размещение на хранение'), ('moved', 'Перемещение внутри склада'), ('processing', 'Обработка/упаковка'), ('dispatched', 'Отгрузка'), ('inspection', 'Контроль/проверка'), ('manual_note', 'Ручная отметка')], max_length=30)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('note', models.TextField(blank=True)),
                ('cargo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='core.cargo')),
                ('triggered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cargo_events', to='core.employee')),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='qualifications',
            field=models.ManyToManyField(blank=True, to='core.qualification'),
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('employees', models.ManyToManyField(related_name='shifts', to='core.employee')),
            ],
        ),
        migrations.CreateModel(
            name='StorageLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('aisle', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('rack', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('shelf', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('bin', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
            ],
            options={
                'unique_together': {('zone', 'aisle', 'rack', 'shelf', 'bin')},
            },
        ),
        migrations.AddField(
            model_name='cargo',
            name='location',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cargo', to='core.storagelocation'),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Ожидает назначения'), ('in_progress', 'Выполняется'), ('completed', 'Завершена'), ('cancelled', 'Отменена')], default='pending', max_length=20)),
                ('difficulty', models.PositiveSmallIntegerField(default=1)),
                ('urgent', models.BooleanField(default=False)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.employee')),
                ('cargo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.cargo')),
                ('required_qualifications', models.ManyToManyField(blank=True, to='core.qualification')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.shift')),
            ],
        ),
        migrations.CreateModel(
            name='TaskAssignmentLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('note', models.TextField(blank=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.employee')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignment_history', to='core.task')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeShiftStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_count', models.IntegerField(default=0)),
                ('shift_score', models.IntegerField(default=0)),
                ('is_busy', models.BooleanField(default=False)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shift_stats', to='core.employee')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_stats', to='core.shift')),
            ],
            options={
                'unique_together': {('employee', 'shift')},
            },
        ),
    ]
